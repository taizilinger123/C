回顾：
1.for语句的执行方式
2.break;和continue;语句
3.循环嵌套
4.for语句的多种写法
5.while循环语句
6.do...while循环语句
7.输入缓冲区的清理

作业：
1.打印九九乘法表
2.现在有一组自行车，三轮车和汽车每个汽车有一个座位和四个轮子
一共有十个座位和28个轮子，编程把所有可能的组合计算出来
3.编写一个猜数游戏使用一个未初始化的变量除以100的余数作为目标数字。程序中让
用户不停猜，猜到数字游戏结束。猜的过程中要给出提示。
4.统计一个数字的数位个数

预习：
1.数组（一维数组和二维数组）

多个同类型变量可以合并成一个数组
数组中的所有变量从前到后顺序排列
数组只有一个名字
数组中使用编号（下标）来区分不同的变量
数组中最前面的变量下标为0，后边的变量下标依次递增
数组中有效下标的范围是从0到个数减一，超过这个范围的下标不可以使用

使用循环操作数组才能最大程度发挥数组的优势。这样的代码不会随着数据量的增加而增加。
使用方式非常类似的同类型变量才有必要合并到数组中

练习：
1.从键盘上读取一个整数，把其中的每个数位单独打印在屏幕上，数位之间使用空格分开（假定数字不会超过五位数）
数组的初始化
1.用大括号把所有初始化数据包含起来
2.所有数据之间使用逗号分隔
3.所有初始化数据从前到后按顺序使用
4.多余的初始化数据自动被丢弃
5.没有对应初始化数据的变量自动被初始化成0
6.如果给所有变量都提供了初始化数据则可以省略数组声明中的个数

练习：
1.从键盘上读八个整数，然后统计出其中正数和负数的个数分别是多少（先读进来然后再统计）
2.把一个数字中0到9之间的每个数字出现的次数统计出来

数组名称在计算机内部使用一个临时计算出来的数字替换
这个数字就是数组中下标为0变量的地址
数组名称不可以被赋值
数组名称加下标可以得到下标所对应变量的地址
假设有名为arr的数组，则*(arr + n)可以表示下标为n的变量，即arr[n]
对数组名称进行sizeof计算可以得到整个数组的大小

c99规范中支持变长数组
变长数组不可以初始化

标准函数rand可以用来获得一个随机数
把函数调用语句直接当数字使用就可以了
需要包含stdlib.h文件

标准函数srand可以用来设置随机数种子
不同的随机数种子得到的随机数不同
同一个种子得到的随机数永远一样
也需要包含stdlib.h文件


标准函数time可以获得0时区从1970年1月1日0时0分0秒到现在所经过的秒数
直接把函数调用语句当数字使用就可以得到这个秒数需要包含time.h文件
任何程序中srand标准函数只应该使用一遍

练习：
1.生成一张彩票（7个数字，每个数字是1到36之中的一个）彩票中数字的顺序无要求可以出现重复数字

由多个普通变量构成的数组叫一维数组由
由多个同类型的一维数组构成的数组叫做二维数组
二维数组中有两个下标，一个用来对应一个一维数组，另外一个用来对应一个普通变量
通常使用循环嵌套操作二维数组
二维数组既可以当成多个一维数组进行初始化也可以当成多个普通变量进行初始化
如果初始化的时候提供了足够多的初始化数据则可以省略一维数组的个数
给二维数组指定一个组下标可以表示某个一维数组
对二维数组也可以使用sizeof计算整个数组的大小
二维数组名称加上n可以表示下标为n的那个一维数组的地址