c语言程序开发过程
1.使用vi编写.c扩展名的源文件
2.使用gcc工具对源文件进行编译，得到a.out文件
3.使用命令./a.out执行程序

MinGW是Windows下的gcc
gVim是windows下的vi

gcc编译过程：
1.把所有预处理指令处理完成
2.把源程序编译成计算机认可的格式(翻译)
	3.把程序中不同部分连起来(链接)
	
	
	预处理指令都以#做开头
	它们不是c语言的语句
	所有预处理指令都用来把源程序变成另外的样子
	
#include是一条预处理指令
	这条预处理指令可以把另外一个文件的内容合并到当前文件中
	使用这条预处理指令时需要指定文件路径，这个路径对应的文件就会被包含进来
#include  "01demo.h"如果使用""包含路径则从当前源文件所在目录开始查找
#include  <01demo.h>如果使用<>包含路径则从系统指定目录开始查找
	
	gcc编译器的选项
	-E     只完成预处理工作
	-c     只完成预处理和编译工作
	        得到以.o作为扩展名的目标文件
			-o     指定新文件的名字
			-std=c89/-std=c99
			         指定编译过程中遵循的C语言规范版本，默认采用c89
					 
					 C语言程序中加入的文字信息叫做注释
					 gcc在处理的时候会直接忽略所有的注释
					 单行注释以//做开头，到行尾为止
					 多行注释以/**做开头，以*/做结尾。中间
					 所有内容都被当成注释(不论有多少行)
	
	关键字是C语言中规定的一组英文单词
	每个单词有特定的作用
	所有关键字都用小写字母
	
	C语言中大量使用名字来区分不同东西
	所有的名字统称为标识符
	标识符通常采用英文单词(汉语拼音)
	标识符的命名规则
	1.第一个字母必须是英文字母或下划线
	2.后面的可以是英文字母，下划线或数字
	3.标识符是大小写敏感的
	4.关键字不可以当标识符用
	5.标识符长度没有限制(c89规范中截取前31个字符，c99规范中截取前63个字符)
	
	C语言程序的书写规范
	1.一行中最多包含一条语句
	2.不同层次的语句要用缩进分开
	3.在合适的地方使用空格和空行提高程序可读性
	4.标识符采用驼峰方式或下划线方式编写
	
	作业：
	    1.设计砝码
		      如果已知n克砝码需要保留则它后面的连续n-1个砝码都可以丢弃
			  
			  C语言中包含一组标准函数
			  不同的标准函数完成不同的功能
			  每个标准函数有自己的名字
			  通过函数调用语句使用标准函数
			  printf标准函数用于把程序中的信息打印在屏幕上
			  为了使用printf标准函数需要把stdio.h文件合并进来
			  可以使用占位符打印编写程序时未知的信息
			  占位符必须和数字的类型匹配
			  占位符的个数必须和数字个数一致
			  在C语言程序中可以使用变量表示编程时未知的数字
			  变量代表了计算机里的一个位置
			  变量是用来存储数字的(只有变量可以存储数字)
	一个变量只能用来记录某个类型的数据
	每个变量有一个专有的名字，计算机通过名字区分不同的变量
	变量必须首先声明然后才能使用变量声明语句用于声明变量
	变量声明语句格式如下：
	int num;
	其中num是变量名称，int表示变量中可以存储什么类型的数据
	变量有两种典型使用方式（存数据和取数据）
	向变量中存数据后原有数据消失
	从变量中取得数据后原有数据保持不变
	
	赋值语句用来向变量中存储数据=叫做赋值操作符，用来编写赋值语句
	赋值操作符左边必须是左值（变量）
	赋值操作符右边必须是可以当数字使用的
	赋值语句中左边的变量和右边的数字如果类型不一致则有可能出错
	在程序中可以直接把变量当数字使用
	变量名即可以当变量用也可以当数字用使用方式取决于环境
	同类型的多个变量可以使用一条变量声明语句来声明
	声明变量的时候可以立刻赋值，这叫做变量的初始化所有变量都应该初始化
	变量还可以用来表示一组规律性变化的数字
